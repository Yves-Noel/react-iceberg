// Generated by https://quicktype.io

export interface Table {
    "format-version": number;
    "table-uuid": string;
    location: string;
    "last-updated-ms": number;
    "last-column-id": number;
    schema: Schema;
    "partition-spec": any[];
    "default-spec-id": number;
    "partition-specs": PartitionSpec[];
    "default-sort-order-id": number;
    "sort-orders": SortOrder[];
    properties: Properties;
    "current-snapshot-id": number;
    snapshots: Snapshot[];
    "snapshot-log": SnapshotLog[];
    "metadata-log": any[];
}

export interface PartitionSpec {
    "spec-id": number;
    fields: any[];
}

export interface Properties {
    owner: string;
}

export interface Schema {
    type: string;
    fields: Field[];
}

export interface Field {
    id: number;
    name: string;
    required: boolean;
    type: Type;
}

export enum Type {
    Long = "long",
    String = "string",
}

export interface SnapshotLog {
    "timestamp-ms": number;
    "snapshot-id": number;
}

export interface Snapshot {
    "snapshot-id": number;
    "timestamp-ms": number;
    summary: Summary;
    "manifest-list": string;
}

export interface Summary {
    operation: string;
    "spark.app.id": string;
    "added-data-files": string;
    "added-records": string;
    "added-files-size": string;
    "changed-partition-count": string;
    "total-records": string;
    "total-data-files": string;
    "total-delete-files": string;
    "total-position-deletes": string;
    "total-equality-deletes": string;
}

export interface SortOrder {
    "order-id": number;
    fields: any[];
}
